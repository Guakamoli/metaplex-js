{"version":3,"file":"findListingByTradeState.mjs","sources":["../../../../src/plugins/auctionHouseModule/findListingByTradeState.ts"],"sourcesContent":["import type { Commitment, PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport { useOperation, Operation, OperationHandler } from '@/types';\nimport { toListingReceiptAccount } from './accounts';\nimport { AuctionHouse } from './AuctionHouse';\nimport { Listing, toLazyListing } from './Listing';\nimport { DisposableScope } from '@/utils';\nimport { findListingReceiptPda } from './pdas';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindListingByTradeStateOperation' as const;\n\n/**\n * @group Operations\n * @category Constructors\n */\nexport const findListingByTradeStateOperation =\n  useOperation<FindListingByTradeStateOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindListingByTradeStateOperation = Operation<\n  typeof Key,\n  FindListingByTradeStateInput,\n  Listing\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindListingByTradeStateInput = {\n  tradeStateAddress: PublicKey;\n  auctionHouse: AuctionHouse;\n  loadJsonMetadata?: boolean; // Default: true\n  commitment?: Commitment;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findListingByTradeStateOperationHandler: OperationHandler<FindListingByTradeStateOperation> =\n  {\n    handle: async (\n      operation: FindListingByTradeStateOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ) => {\n      const {\n        tradeStateAddress,\n        auctionHouse,\n        commitment,\n        loadJsonMetadata = true,\n      } = operation.input;\n\n      const receiptAddress = findListingReceiptPda(tradeStateAddress);\n      const account = toListingReceiptAccount(\n        await metaplex.rpc().getAccount(receiptAddress, commitment)\n      );\n      scope.throwIfCanceled();\n\n      const lazyListing = toLazyListing(account, auctionHouse);\n      return metaplex\n        .auctions()\n        .for(auctionHouse)\n        .loadListing(lazyListing, { loadJsonMetadata, commitment })\n        .run(scope);\n    },\n  };\n"],"names":["Key","findListingByTradeStateOperation","useOperation","findListingByTradeStateOperationHandler","handle","operation","metaplex","scope","tradeStateAddress","auctionHouse","commitment","loadJsonMetadata","input","receiptAddress","findListingReceiptPda","account","toListingReceiptAccount","rpc","getAccount","throwIfCanceled","lazyListing","toLazyListing","auctions","for","loadListing","run"],"mappings":";;;;;AAUA;AACA;;AAEA,MAAMA,GAAG,GAAG,kCAAZ,CAAA;AAEA;AACA;AACA;AACA;;MACaC,gCAAgC,GAC3CC,YAAY,CAAmCF,GAAnC,EADP;AAGP;AACA;AACA;AACA;;AAkBA;AACA;AACA;AACA;AACO,MAAMG,uCAA2F,GACtG;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MACJC,iBADI;MAEJC,YAFI;MAGJC,UAHI;AAIJC,MAAAA,gBAAgB,GAAG,IAAA;KACjBN,GAAAA,SAAS,CAACO,KALd,CAAA;AAOA,IAAA,MAAMC,cAAc,GAAGC,qBAAqB,CAACN,iBAAD,CAA5C,CAAA;AACA,IAAA,MAAMO,OAAO,GAAGC,uBAAuB,CACrC,MAAMV,QAAQ,CAACW,GAAT,EAAA,CAAeC,UAAf,CAA0BL,cAA1B,EAA0CH,UAA1C,CAD+B,CAAvC,CAAA;AAGAH,IAAAA,KAAK,CAACY,eAAN,EAAA,CAAA;AAEA,IAAA,MAAMC,WAAW,GAAGC,aAAa,CAACN,OAAD,EAAUN,YAAV,CAAjC,CAAA;IACA,OAAOH,QAAQ,CACZgB,QADI,EAEJC,CAAAA,GAFI,CAEAd,YAFA,CAGJe,CAAAA,WAHI,CAGQJ,WAHR,EAGqB;MAAET,gBAAF;AAAoBD,MAAAA,UAAAA;AAApB,KAHrB,CAIJe,CAAAA,GAJI,CAIAlB,KAJA,CAAP,CAAA;AAKD,GAAA;AAzBH;;;;"}