{"version":3,"file":"findListingByReceipt.cjs","sources":["../../../../src/plugins/auctionHouseModule/findListingByReceipt.ts"],"sourcesContent":["import type { Commitment, PublicKey } from '@solana/web3.js';\nimport type { Metaplex } from '@/Metaplex';\nimport { useOperation, Operation, OperationHandler } from '@/types';\nimport { toListingReceiptAccount } from './accounts';\nimport { AuctionHouse } from './AuctionHouse';\nimport { Listing, toLazyListing } from './Listing';\nimport { DisposableScope } from '@/utils';\n\n// -----------------\n// Operation\n// -----------------\n\nconst Key = 'FindListingByReceiptOperation' as const;\n\n/**\n * @group Operations\n * @category Constructors\n */\nexport const findListingByReceiptOperation =\n  useOperation<FindListingByReceiptOperation>(Key);\n\n/**\n * @group Operations\n * @category Types\n */\nexport type FindListingByReceiptOperation = Operation<\n  typeof Key,\n  FindListingByReceiptInput,\n  Listing\n>;\n\n/**\n * @group Operations\n * @category Inputs\n */\nexport type FindListingByReceiptInput = {\n  receiptAddress: PublicKey;\n  auctionHouse: AuctionHouse;\n  loadJsonMetadata?: boolean; // Default: true\n  commitment?: Commitment;\n};\n\n/**\n * @group Operations\n * @category Handlers\n */\nexport const findListingByReceiptOperationHandler: OperationHandler<FindListingByReceiptOperation> =\n  {\n    handle: async (\n      operation: FindListingByReceiptOperation,\n      metaplex: Metaplex,\n      scope: DisposableScope\n    ) => {\n      const {\n        receiptAddress,\n        auctionHouse,\n        commitment,\n        loadJsonMetadata = true,\n      } = operation.input;\n\n      const account = toListingReceiptAccount(\n        await metaplex.rpc().getAccount(receiptAddress, commitment)\n      );\n      scope.throwIfCanceled();\n\n      const lazyListing = toLazyListing(account, auctionHouse);\n      return metaplex\n        .auctions()\n        .for(auctionHouse)\n        .loadListing(lazyListing, { loadJsonMetadata, commitment })\n        .run(scope);\n    },\n  };\n"],"names":["Key","findListingByReceiptOperation","useOperation","findListingByReceiptOperationHandler","handle","operation","metaplex","scope","receiptAddress","auctionHouse","commitment","loadJsonMetadata","input","account","toListingReceiptAccount","rpc","getAccount","throwIfCanceled","lazyListing","toLazyListing","auctions","for","loadListing","run"],"mappings":";;;;;;;;AAQA;AACA;AACA;AAEA,MAAMA,GAAG,GAAG,+BAAZ,CAAA;AAEA;AACA;AACA;AACA;;MACaC,6BAA6B,GACxCC,sBAAY,CAAgCF,GAAhC,EADP;AAGP;AACA;AACA;AACA;;AAkBA;AACA;AACA;AACA;AACO,MAAMG,oCAAqF,GAChG;AACEC,EAAAA,MAAM,EAAE,OACNC,SADM,EAENC,QAFM,EAGNC,KAHM,KAIH;IACH,MAAM;MACJC,cADI;MAEJC,YAFI;MAGJC,UAHI;AAIJC,MAAAA,gBAAgB,GAAG,IAAA;KACjBN,GAAAA,SAAS,CAACO,KALd,CAAA;AAOA,IAAA,MAAMC,OAAO,GAAGC,gCAAuB,CACrC,MAAMR,QAAQ,CAACS,GAAT,EAAA,CAAeC,UAAf,CAA0BR,cAA1B,EAA0CE,UAA1C,CAD+B,CAAvC,CAAA;AAGAH,IAAAA,KAAK,CAACU,eAAN,EAAA,CAAA;AAEA,IAAA,MAAMC,WAAW,GAAGC,qBAAa,CAACN,OAAD,EAAUJ,YAAV,CAAjC,CAAA;IACA,OAAOH,QAAQ,CACZc,QADI,EAEJC,CAAAA,GAFI,CAEAZ,YAFA,CAGJa,CAAAA,WAHI,CAGQJ,WAHR,EAGqB;MAAEP,gBAAF;AAAoBD,MAAAA,UAAAA;AAApB,KAHrB,CAIJa,CAAAA,GAJI,CAIAhB,KAJA,CAAP,CAAA;AAKD,GAAA;AAxBH;;;;;"}